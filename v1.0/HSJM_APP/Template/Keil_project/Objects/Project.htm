<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Fri Jan 12 14:13:14 2024
<BR><P>
<H3>Maximum Stack Usage =        416 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; WriteFrameTransmit &rArr; process_0x81 &rArr; ReadFrameTransmit &rArr; ReadFrameChecksumBuff
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1b]">ADC0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">ADC0_1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1b]">ADC0_1_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from gd32a50x_it.o(.text.BusFault_Handler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[1d]">CAN0_Busoff_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[1e]">CAN0_Error_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[1f]">CAN0_FastError_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[1c]">CAN0_Message_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[21]">CAN0_REC_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[20]">CAN0_TEC_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[22]">CAN0_WKUP_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[45]">CAN1_Busoff_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[46]">CAN1_Error_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[47]">CAN1_FastError_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[44]">CAN1_Message_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[49]">CAN1_REC_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[48]">CAN1_TEC_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[43]">CAN1_WKUP_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[3a]">CMP_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[14]">DMA0_Channel0_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[15]">DMA0_Channel1_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[16]">DMA0_Channel2_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[17]">DMA0_Channel3_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[18]">DMA0_Channel4_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[19]">DMA0_Channel5_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[1a]">DMA0_Channel6_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[3e]">DMA1_Channel0_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[3f]">DMA1_Channel1_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[40]">DMA1_Channel2_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[41]">DMA1_Channel3_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[42]">DMA1_Channel4_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[38]">DMAMUX_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from gd32a50x_it.o(.text.DebugMon_Handler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[f]">EXTI0_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[31]">EXTI10_15_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[10]">EXTI1_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[11]">EXTI2_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[12]">EXTI3_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[13]">EXTI4_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[32]">EXTI5_9_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[d]">FMC_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[4a]">FPU_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from gd32a50x_it.o(.text.HardFault_Handler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[29]">I2C0_ER_IRQHandler</a> from i2c_app.o(.text.I2C0_ER_IRQHandler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[28]">I2C0_EV_IRQHandler</a> from i2c_app.o(.text.I2C0_EV_IRQHandler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[2b]">I2C1_ER_IRQHandler</a> from i2c_app.o(.text.I2C1_ER_IRQHandler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[2a]">I2C1_EV_IRQHandler</a> from i2c_app.o(.text.I2C1_EV_IRQHandler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[b]">LVD_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[4b]">MFCOM_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from gd32a50x_it.o(.text.MemManage_Handler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gd32a50x_it.o(.text.NMI_Handler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[3b]">OVD_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from gd32a50x_it.o(.text.PendSV_Handler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[e]">RCU_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[c]">RTC_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[2c]">SPI0_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[39]">SRAMC_ECCSE_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from gd32a50x_it.o(.text.SVC_Handler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from gd32a50x_it.o(.text.SysTick_Handler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[4d]">SystemInit</a> from system_gd32a50x.o(.text.SystemInit) referenced from startup_gd32a50x.o(.text)
 <LI><a href="#[33]">TAMPER_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[23]">TIMER0_BRK_UP_TRG_CMT_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[24]">TIMER0_Channel_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[26]">TIMER19_BRK_UP_TRG_CMT_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[27]">TIMER19_Channel_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[25]">TIMER1_IRQHandler</a> from gd32a50x_it.o(.text.TIMER1_IRQHandler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[34]">TIMER20_BRK_UP_TRG_CMT_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[35]">TIMER20_Channel_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[3c]">TIMER5_DAC_IRQHandler</a> from gd32a50x_it.o(.text.TIMER5_DAC_IRQHandler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[3d]">TIMER6_IRQHandler</a> from gd32a50x_it.o(.text.TIMER6_IRQHandler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[36]">TIMER7_BRK_UP_TRG_CMT_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[37]">TIMER7_Channel_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[2e]">USART0_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from gd32a50x_it.o(.text.UsageFault_Handler) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[a]">WWDGT_IRQHandler</a> from startup_gd32a50x.o(.text) referenced from startup_gd32a50x.o(RESET)
 <LI><a href="#[4e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32a50x.o(.text)
 <LI><a href="#[4f]">fputc</a> from fputc.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[4c]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(.text)
</UL>
<P><STRONG><a name="[104]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[50]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[105]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[106]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[107]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[108]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[109]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ADC0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN0_Busoff_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN0_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN0_FastError_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>CAN0_Message_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN0_REC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN0_TEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN0_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>CAN1_Busoff_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>CAN1_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>CAN1_FastError_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>CAN1_Message_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN1_REC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>CAN1_TEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>CAN1_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA0_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA0_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA0_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA0_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA0_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA0_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA0_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMAMUX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>MFCOM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>OVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RCU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>SRAMC_ECCSE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIMER0_BRK_UP_TRG_CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIMER19_BRK_UP_TRG_CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIMER19_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIMER20_BRK_UP_TRG_CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIMER20_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIMER7_BRK_UP_TRG_CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIMER7_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32a50x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[ba]"></a>abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, siabs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBacklightController
</UL>

<P><STRONG><a name="[c6]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[10a]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[52]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[10d]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[59]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[100]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[51]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[10e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[10f]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, semi.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[111]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[112]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>__I$use$semihosting$fputc</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusesemip.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[57]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[64]"></a>AppInitialization</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, initialization.o(.text.AppInitialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AppInitialization &rArr; Backlight_Brightness_Init &rArr; Modify_PWM_Directly &rArr; timer_channel_output_pulse_value_config
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Sequence
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Backlight_Brightness_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization
</UL>

<P><STRONG><a name="[cd]"></a>BackLightModeConfigureFun</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, writedataframe.o(.text.BackLightModeConfigureFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BackLightModeConfigureFun
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[d1]"></a>BackLightSwitchCmdFun</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, writedataframe.o(.text.BackLightSwitchCmdFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BackLightSwitchCmdFun
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[66]"></a>Backlight_Brightness_Init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, backlight.o(.text.Backlight_Brightness_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Backlight_Brightness_Init &rArr; Modify_PWM_Directly &rArr; timer_channel_output_pulse_value_config
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modify_PWM_Directly
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppInitialization
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32a50x_it.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[c7]"></a>ChecksumCheck</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, writedataframe.o(.text.ChecksumCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ChecksumCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32a50x_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[d3]"></a>ExtUpdateCmd1Fun</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, writedataframe.o(.text.ExtUpdateCmd1Fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ExtUpdateCmd1Fun
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[d4]"></a>ExtUpdateCmd2Fun</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, writedataframe.o(.text.ExtUpdateCmd2Fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ExtUpdateCmd2Fun
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[d5]"></a>ExtUpdateCmd3Fun</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, writedataframe.o(.text.ExtUpdateCmd3Fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ExtUpdateCmd3Fun
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[c9]"></a>ExtWriteFrameDataWrite</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, writedataframe.o(.text.ExtWriteFrameDataWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ExtWriteFrameDataWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32a50x_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 406 bytes, Stack size 8 bytes, i2c_app.o(.text.I2C0_ER_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = I2C0_ER_IRQHandler &rArr; i2c_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_flag_get
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 960 bytes, Stack size 24 bytes, i2c_app.o(.text.I2C0_EV_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = I2C0_EV_IRQHandler &rArr; i2c_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_flag_get
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_flag_clear
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_receive
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_transmit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 406 bytes, Stack size 8 bytes, i2c_app.o(.text.I2C1_ER_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = I2C1_ER_IRQHandler &rArr; i2c_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_flag_get
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 960 bytes, Stack size 24 bytes, i2c_app.o(.text.I2C1_EV_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = I2C1_EV_IRQHandler &rArr; i2c_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_flag_get
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_flag_clear
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_receive
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_transmit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>I2C_BUS_Reset</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, i2c_app.o(.text.I2C_BUS_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = I2C_BUS_Reset &rArr; I2C_GPIO_Reset &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c1_MasterWriteMulBytes
</UL>

<P><STRONG><a name="[71]"></a>I2C_Config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, i2c_app.o(.text.I2C_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_Config &rArr; I2C_Master_Config &rArr; i2c_timing_config
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Master_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuI2cInitialization
</UL>

<P><STRONG><a name="[70]"></a>I2C_GPIO_Reset</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, i2c_app.o(.text.I2C_GPIO_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = I2C_GPIO_Reset &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BUS_Reset
</UL>

<P><STRONG><a name="[73]"></a>I2C_Gpio_Config</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, i2c_app.o(.text.I2C_Gpio_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = I2C_Gpio_Config &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuI2cInitialization
</UL>

<P><STRONG><a name="[72]"></a>I2C_Master_Config</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, i2c_app.o(.text.I2C_Master_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_Master_Config &rArr; i2c_timing_config
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_timing_config
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_clock_config
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Config
</UL>

<P><STRONG><a name="[77]"></a>I2C_Slave_Config</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, i2c_app.o(.text.I2C_Slave_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = I2C_Slave_Config &rArr; nvic_irq_enable &rArr; nvic_priority_group_set
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_timing_config
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_clock_config
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_enable
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_enable
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_address_config
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>I2c1_MasterWriteMulBytes</STRONG> (Thumb, 908 bytes, Stack size 56 bytes, max96752.o(.text.I2c1_MasterWriteMulBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = I2c1_MasterWriteMulBytes &rArr; I2C_BUS_Reset &rArr; I2C_GPIO_Reset &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transfer_byte_number_config
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start_on_bus
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_addressing
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_transmit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_automatic_end_enable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BUS_Reset
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX96752_REG_Config
</UL>

<P><STRONG><a name="[82]"></a>Initialization</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, initialization.o(.text.Initialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Initialization &rArr; McuInitialization &rArr; McuTimerInitialization &rArr; Timer19_Generate_PWM_config &rArr; timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuInitialization
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppInitialization
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ca]"></a>LcdInformationCheckFun</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, writedataframe.o(.text.LcdInformationCheckFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LcdInformationCheckFun
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[85]"></a>MAX96752_REG_Config</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, max96752.o(.text.MAX96752_REG_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = MAX96752_REG_Config &rArr; I2c1_MasterWriteMulBytes &rArr; I2C_BUS_Reset &rArr; I2C_GPIO_Reset &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c1_MasterWriteMulBytes
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>McuAdcInitialization</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, adc_app.o(.text.McuAdcInitialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = McuAdcInitialization &rArr; adc_NTC_config &rArr; adc_regular_channel_config
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_software_trigger_enable
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_NTC_config
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuInitialization
</UL>

<P><STRONG><a name="[89]"></a>McuGpioInitialization</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gpio_app.o(.text.McuGpioInitialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = McuGpioInitialization &rArr; Gpio_Config &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Config
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Afio_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuInitialization
</UL>

<P><STRONG><a name="[8a]"></a>McuI2cInitialization</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, i2c_app.o(.text.McuI2cInitialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = McuI2cInitialization &rArr; I2C_Gpio_Config &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Gpio_Config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuInitialization
</UL>

<P><STRONG><a name="[83]"></a>McuInitialization</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, initialization.o(.text.McuInitialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = McuInitialization &rArr; McuTimerInitialization &rArr; Timer19_Generate_PWM_config &rArr; timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuTimerInitialization
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuSpiInitialize
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuRcuInitialization
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuI2cInitialization
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuGpioInitialization
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuAdcInitialization
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization
</UL>

<P><STRONG><a name="[8f]"></a>McuRcuDeinit</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, rcu_app.o(.text.McuRcuDeinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = McuRcuDeinit &rArr; rcu_adc_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_adc_clock_config
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updating
</UL>

<P><STRONG><a name="[8c]"></a>McuRcuInitialization</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, rcu_app.o(.text.McuRcuInitialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = McuRcuInitialization &rArr; rcu_adc_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_adc_clock_config
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuInitialization
</UL>

<P><STRONG><a name="[8e]"></a>McuSpiInitialize</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, spi_app.o(.text.McuSpiInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = McuSpiInitialize &rArr; SPI_Master_Init &rArr; spi_i2s_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Master_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuInitialization
</UL>

<P><STRONG><a name="[8d]"></a>McuTimerInitialization</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, timer_app.o(.text.McuTimerInitialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = McuTimerInitialization &rArr; Timer19_Generate_PWM_config &rArr; timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer6_Generate_1s_Interrupt
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer5_Generate_2s_Interrupt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Generate_1ms_Interrupt
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer19_Generate_PWM_config
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuInitialization
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32a50x_it.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>Modify_PWM_Directly</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, backlight.o(.text.Modify_PWM_Directly))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Modify_PWM_Directly &rArr; timer_channel_output_pulse_value_config
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_pulse_value_config
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Backlight_Brightness_Init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Brightness
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32a50x_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>Notice_master_to_read</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, update.o(.text.Notice_master_to_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Notice_master_to_read &rArr; gpio_bit_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Process
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updating
</UL>

<P><STRONG><a name="[d0]"></a>OpenCloseLcdFun</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, writedataframe.o(.text.OpenCloseLcdFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = OpenCloseLcdFun
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32a50x_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>PowerOn_Order</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, power.o(.text.PowerOn_Order))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PowerOn_Order &rArr; gpio_input_bit_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Sequence
</UL>

<P><STRONG><a name="[65]"></a>PowerOn_Sequence</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, power.o(.text.PowerOn_Sequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = PowerOn_Sequence &rArr; PowerOn_Order &rArr; gpio_input_bit_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Order
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppInitialization
</UL>

<P><STRONG><a name="[9c]"></a>ReadCmdIdStrInit</STRONG> (Thumb, 356 bytes, Stack size 32 bytes, readdataframe.o(.text.ReadCmdIdStrInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ReadCmdIdStrInit &rArr; gpio_input_bit_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>ReadFrameChecksumBuff</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, readdataframe.o(.text.ReadFrameChecksumBuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ReadFrameChecksumBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFrameTransmit
</UL>

<P><STRONG><a name="[a0]"></a>ReadFrameChecksumCount</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, readdataframe.o(.text.ReadFrameChecksumCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ReadFrameChecksumCount
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFrameWriteData
</UL>

<P><STRONG><a name="[9d]"></a>ReadFrameTransmit</STRONG> (Thumb, 812 bytes, Stack size 64 bytes, readdataframe.o(.text.ReadFrameTransmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ReadFrameTransmit &rArr; ReadFrameChecksumBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFrameChecksumBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handshake_process
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_0x81
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER6_IRQHandler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER5_DAC_IRQHandler
</UL>

<P><STRONG><a name="[9f]"></a>ReadFrameWriteData</STRONG> (Thumb, 738 bytes, Stack size 56 bytes, readdataframe.o(.text.ReadFrameWriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ReadFrameWriteData &rArr; ReadFrameChecksumCount
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFrameChecksumCount
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>SPI_Master_Init</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, spi_app.o(.text.SPI_Master_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SPI_Master_Init &rArr; spi_i2s_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_struct_para_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_nss_output_enable
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuSpiInitialize
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32a50x_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[cc]"></a>SetFrameTimeoutValueFun</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, writedataframe.o(.text.SetFrameTimeoutValueFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SetFrameTimeoutValueFun
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[bc]"></a>SetTargetDutyCycle</STRONG> (Thumb, 504 bytes, Stack size 24 bytes, backlight.o(.text.SetTargetDutyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetTargetDutyCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Brightness
</UL>

<P><STRONG><a name="[c8]"></a>StdWriteFrameDataWrite</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, writedataframe.o(.text.StdWriteFrameDataWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = StdWriteFrameDataWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gd32a50x_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SystemInit</STRONG> (Thumb, 330 bytes, Stack size 8 bytes, system_gd32a50x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; system_clock_config &rArr; system_clock_100m_pll_irc8m
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(.text)
</UL>
<P><STRONG><a name="[25]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 344 bytes, Stack size 8 bytes, gd32a50x_it.o(.text.TIMER1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER1_IRQHandler &rArr; timer_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIMER5_DAC_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, gd32a50x_it.o(.text.TIMER5_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TIMER5_DAC_IRQHandler &rArr; ReadFrameTransmit &rArr; ReadFrameChecksumBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFrameTransmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIMER6_IRQHandler</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, gd32a50x_it.o(.text.TIMER6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TIMER6_IRQHandler &rArr; ReadFrameTransmit &rArr; ReadFrameChecksumBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFrameTransmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[cf]"></a>TimeStampFun</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, writedataframe.o(.text.TimeStampFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TimeStampFun
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[97]"></a>Timer19_Generate_PWM_config</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, timer_app.o(.text.Timer19_Generate_PWM_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Timer19_Generate_PWM_config &rArr; timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_struct_para_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_primary_output_config
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_struct_para_init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_shadow_config
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_mode_config
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_config
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuTimerInitialization
</UL>

<P><STRONG><a name="[94]"></a>Timer1_Generate_1ms_Interrupt</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, timer_app.o(.text.Timer1_Generate_1ms_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Timer1_Generate_1ms_Interrupt &rArr; timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_struct_para_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuTimerInitialization
</UL>

<P><STRONG><a name="[95]"></a>Timer5_Generate_2s_Interrupt</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, timer_app.o(.text.Timer5_Generate_2s_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Timer5_Generate_2s_Interrupt &rArr; timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_struct_para_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuTimerInitialization
</UL>

<P><STRONG><a name="[96]"></a>Timer6_Generate_1s_Interrupt</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, timer_app.o(.text.Timer6_Generate_1s_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Timer6_Generate_1s_Interrupt &rArr; timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_struct_para_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuTimerInitialization
</UL>

<P><STRONG><a name="[ce]"></a>TouchChipResetCmdFun</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, writedataframe.o(.text.TouchChipResetCmdFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TouchChipResetCmdFun
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[b9]"></a>UpdateBacklightController</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, backlight.o(.text.UpdateBacklightController))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UpdateBacklightController
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abs
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Brightness
</UL>

<P><STRONG><a name="[d2]"></a>UpdateCmdFun</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, writedataframe.o(.text.UpdateCmdFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UpdateCmdFun
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[bb]"></a>Update_Brightness</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, backlight.o(.text.Update_Brightness))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Update_Brightness &rArr; UpdateBacklightController
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBacklightController
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTargetDutyCycle
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modify_PWM_Directly
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[bd]"></a>Update_Process</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, update.o(.text.Update_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Update_Process &rArr; fmc_uint64_program &rArr; fmc_erase_pages &rArr; fmc_page_erase &rArr; fmc_bank1_ready_wait &rArr; fmc_bank1_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_disable
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Notice_master_to_read
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_uint64_program
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compareArrays
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updating
</UL>

<P><STRONG><a name="[c0]"></a>Updating</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, update.o(.text.Updating))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Updating &rArr; Update_Process &rArr; fmc_uint64_program &rArr; fmc_erase_pages &rArr; fmc_page_erase &rArr; fmc_bank1_ready_wait &rArr; fmc_bank1_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_deinit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_disable
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_deinit
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_deinit
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_deinit
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Process
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Notice_master_to_read
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuRcuDeinit
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32a50x_it.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32a50x.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>WriteFrameTransmit</STRONG> (Thumb, 868 bytes, Stack size 304 bytes, writedataframe.o(.text.WriteFrameTransmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = WriteFrameTransmit &rArr; process_0x81 &rArr; ReadFrameTransmit &rArr; ReadFrameChecksumBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateCmdFun
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchChipResetCmdFun
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeStampFun
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StdWriteFrameDataWrite
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFrameTimeoutValueFun
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseLcdFun
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdInformationCheckFun
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtWriteFrameDataWrite
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtUpdateCmd3Fun
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtUpdateCmd2Fun
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtUpdateCmd1Fun
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChecksumCheck
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackLightSwitchCmdFun
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackLightModeConfigureFun
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_0x81
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_disable
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Brightness
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFrameTransmit
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>adc_NTC_config</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, adc_app.o(.text.adc_NTC_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = adc_NTC_config &rArr; adc_regular_channel_config
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_special_function_config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_regular_channel_config
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_oversample_mode_enable
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_oversample_mode_config
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_mode_config
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_external_trigger_source_config
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_external_trigger_config
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_data_alignment_config
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_channel_length_config
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_enable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuAdcInitialization
</UL>

<P><STRONG><a name="[e0]"></a>adc_calibration_enable</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, gd32a50x_adc.o(.text.adc_calibration_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_calibration_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_NTC_config
</UL>

<P><STRONG><a name="[d9]"></a>adc_channel_length_config</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, gd32a50x_adc.o(.text.adc_channel_length_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adc_channel_length_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_NTC_config
</UL>

<P><STRONG><a name="[d7]"></a>adc_data_alignment_config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gd32a50x_adc.o(.text.adc_data_alignment_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_data_alignment_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_NTC_config
</UL>

<P><STRONG><a name="[c4]"></a>adc_deinit</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gd32a50x_adc.o(.text.adc_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = adc_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updating
</UL>

<P><STRONG><a name="[df]"></a>adc_enable</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, gd32a50x_adc.o(.text.adc_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_NTC_config
</UL>

<P><STRONG><a name="[dc]"></a>adc_external_trigger_config</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, gd32a50x_adc.o(.text.adc_external_trigger_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_external_trigger_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_NTC_config
</UL>

<P><STRONG><a name="[db]"></a>adc_external_trigger_source_config</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gd32a50x_adc.o(.text.adc_external_trigger_source_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adc_external_trigger_source_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_NTC_config
</UL>

<P><STRONG><a name="[f1]"></a>adc_flag_clear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gd32a50x_adc.o(.text.adc_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adc_value
</UL>

<P><STRONG><a name="[f2]"></a>adc_flag_get</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, gd32a50x_adc.o(.text.adc_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = adc_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adc_value
</UL>

<P><STRONG><a name="[e3]"></a>adc_mean_filter</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, ntc.o(.text.adc_mean_filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = adc_mean_filter &rArr; get_adc_value &rArr; adc_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adc_value
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6]"></a>adc_mode_config</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, gd32a50x_adc.o(.text.adc_mode_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_mode_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_NTC_config
</UL>

<P><STRONG><a name="[dd]"></a>adc_oversample_mode_config</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, gd32a50x_adc.o(.text.adc_oversample_mode_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = adc_oversample_mode_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_NTC_config
</UL>

<P><STRONG><a name="[de]"></a>adc_oversample_mode_enable</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, gd32a50x_adc.o(.text.adc_oversample_mode_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_oversample_mode_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_NTC_config
</UL>

<P><STRONG><a name="[da]"></a>adc_regular_channel_config</STRONG> (Thumb, 372 bytes, Stack size 20 bytes, gd32a50x_adc.o(.text.adc_regular_channel_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = adc_regular_channel_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_NTC_config
</UL>

<P><STRONG><a name="[88]"></a>adc_software_trigger_enable</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gd32a50x_adc.o(.text.adc_software_trigger_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_software_trigger_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuAdcInitialization
</UL>

<P><STRONG><a name="[d8]"></a>adc_special_function_config</STRONG> (Thumb, 166 bytes, Stack size 12 bytes, gd32a50x_adc.o(.text.adc_special_function_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = adc_special_function_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_NTC_config
</UL>

<P><STRONG><a name="[be]"></a>compareArrays</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, update.o(.text.compareArrays))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = compareArrays
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Process
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cx
</UL>

<P><STRONG><a name="[e5]"></a>cx</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, update.o(.text.cx))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = cx &rArr; nvic_irq_disable &rArr; __NVIC_DisableIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_disable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compareArrays
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>delay_1ms</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, systick.o(.text.delay_1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_NTC_config
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuTimerInitialization
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handshake_process
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_0x81
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX96752_REG_Config
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization
</UL>

<P><STRONG><a name="[a8]"></a>delay_decrement</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, systick.o(.text.delay_decrement))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[ea]"></a>fmc_doubleword_program</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, gd32a50x_fmc.o(.text.fmc_doubleword_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = fmc_doubleword_program &rArr; fmc_bank1_ready_wait &rArr; fmc_bank1_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank1_ready_wait
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank0_ready_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_uint64_program
</UL>

<P><STRONG><a name="[eb]"></a>fmc_erase_pages</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, fmc_app.o(.text.fmc_erase_pages))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = fmc_erase_pages &rArr; fmc_page_erase &rArr; fmc_bank1_ready_wait &rArr; fmc_bank1_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flags_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_uint64_program
</UL>

<P><STRONG><a name="[f0]"></a>fmc_flag_clear</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, gd32a50x_fmc.o(.text.fmc_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = fmc_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flags_clear
</UL>

<P><STRONG><a name="[ed]"></a>fmc_flags_clear</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, fmc_app.o(.text.fmc_flags_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fmc_flags_clear &rArr; fmc_flag_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_uint64_program
</UL>

<P><STRONG><a name="[ef]"></a>fmc_lock</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gd32a50x_fmc.o(.text.fmc_lock))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_uint64_program
</UL>

<P><STRONG><a name="[ee]"></a>fmc_page_erase</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, gd32a50x_fmc.o(.text.fmc_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = fmc_page_erase &rArr; fmc_bank1_ready_wait &rArr; fmc_bank1_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank1_ready_wait
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank0_ready_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
</UL>

<P><STRONG><a name="[bf]"></a>fmc_uint64_program</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, fmc_app.o(.text.fmc_uint64_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = fmc_uint64_program &rArr; fmc_erase_pages &rArr; fmc_page_erase &rArr; fmc_bank1_ready_wait &rArr; fmc_bank1_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flags_clear
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_doubleword_program
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Process
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ec]"></a>fmc_unlock</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, gd32a50x_fmc.o(.text.fmc_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_uint64_program
</UL>

<P><STRONG><a name="[e4]"></a>get_adc_value</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, ntc.o(.text.get_adc_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = get_adc_value &rArr; adc_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_flag_get
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_mean_filter
</UL>

<P><STRONG><a name="[62]"></a>gpio_af_set</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, gd32a50x_gpio.o(.text.gpio_af_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Afio_Config
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Gpio_Config
</UL>

<P><STRONG><a name="[69]"></a>gpio_bit_reset</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gd32a50x_gpio.o(.text.gpio_bit_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Config
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Order
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handshake_process
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_0x81
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Notice_master_to_read
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cx
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER6_IRQHandler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER5_DAC_IRQHandler
</UL>

<P><STRONG><a name="[63]"></a>gpio_bit_set</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gd32a50x_gpio.o(.text.gpio_bit_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Config
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Afio_Config
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_EV_IRQHandler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Order
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handshake_process
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_0x81
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[c2]"></a>gpio_deinit</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, gd32a50x_gpio.o(.text.gpio_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gpio_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updating
</UL>

<P><STRONG><a name="[9b]"></a>gpio_input_bit_get</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, gd32a50x_gpio.o(.text.gpio_input_bit_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gpio_input_bit_get
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Order
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handshake_process
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_0x81
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCmdIdStrInit
</UL>

<P><STRONG><a name="[60]"></a>gpio_mode_set</STRONG> (Thumb, 156 bytes, Stack size 28 bytes, gd32a50x_gpio.o(.text.gpio_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Config
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Afio_Config
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Gpio_Config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Reset
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BUS_Reset
</UL>

<P><STRONG><a name="[61]"></a>gpio_output_options_set</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, gd32a50x_gpio.o(.text.gpio_output_options_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_output_options_set
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Config
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Afio_Config
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Gpio_Config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Reset
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BUS_Reset
</UL>

<P><STRONG><a name="[f3]"></a>handshake</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, external_detection.o(.text.handshake))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = handshake &rArr; handshake_process &rArr; ReadFrameTransmit &rArr; ReadFrameChecksumBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handshake_process
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f4]"></a>handshake_process</STRONG> (Thumb, 328 bytes, Stack size 40 bytes, external_detection.o(.text.handshake_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = handshake_process &rArr; ReadFrameTransmit &rArr; ReadFrameChecksumBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFrameTransmit
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handshake
</UL>

<P><STRONG><a name="[78]"></a>i2c_address_config</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, gd32a50x_i2c.o(.text.i2c_address_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_address_config
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Config
</UL>

<P><STRONG><a name="[7e]"></a>i2c_automatic_end_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32a50x_i2c.o(.text.i2c_automatic_end_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_automatic_end_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c1_MasterWriteMulBytes
</UL>

<P><STRONG><a name="[6d]"></a>i2c_data_receive</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, gd32a50x_i2c.o(.text.i2c_data_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_EV_IRQHandler
</UL>

<P><STRONG><a name="[6e]"></a>i2c_data_transmit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gd32a50x_i2c.o(.text.i2c_data_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_EV_IRQHandler
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c1_MasterWriteMulBytes
</UL>

<P><STRONG><a name="[c3]"></a>i2c_deinit</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gd32a50x_i2c.o(.text.i2c_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = i2c_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updating
</UL>

<P><STRONG><a name="[76]"></a>i2c_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32a50x_i2c.o(.text.i2c_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Master_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Config
</UL>

<P><STRONG><a name="[81]"></a>i2c_flag_clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32a50x_i2c.o(.text.i2c_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c1_MasterWriteMulBytes
</UL>

<P><STRONG><a name="[6c]"></a>i2c_flag_get</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, gd32a50x_i2c.o(.text.i2c_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_EV_IRQHandler
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c1_MasterWriteMulBytes
</UL>

<P><STRONG><a name="[79]"></a>i2c_interrupt_enable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32a50x_i2c.o(.text.i2c_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Config
</UL>

<P><STRONG><a name="[6b]"></a>i2c_interrupt_flag_clear</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32a50x_i2c.o(.text.i2c_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_ER_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_EV_IRQHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_ER_IRQHandler
</UL>

<P><STRONG><a name="[6a]"></a>i2c_interrupt_flag_get</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, gd32a50x_i2c.o(.text.i2c_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = i2c_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_ER_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_EV_IRQHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_ER_IRQHandler
</UL>

<P><STRONG><a name="[7c]"></a>i2c_master_addressing</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, gd32a50x_i2c.o(.text.i2c_master_addressing))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_master_addressing
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c1_MasterWriteMulBytes
</UL>

<P><STRONG><a name="[75]"></a>i2c_master_clock_config</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, gd32a50x_i2c.o(.text.i2c_master_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_master_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Master_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Config
</UL>

<P><STRONG><a name="[7f]"></a>i2c_start_on_bus</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32a50x_i2c.o(.text.i2c_start_on_bus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_start_on_bus
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c1_MasterWriteMulBytes
</UL>

<P><STRONG><a name="[74]"></a>i2c_timing_config</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gd32a50x_i2c.o(.text.i2c_timing_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_timing_config
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Master_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Config
</UL>

<P><STRONG><a name="[7d]"></a>i2c_transfer_byte_number_config</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gd32a50x_i2c.o(.text.i2c_transfer_byte_number_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_transfer_byte_number_config
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c1_MasterWriteMulBytes
</UL>

<P><STRONG><a name="[4c]"></a>main</STRONG> (Thumb, 256 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = main &rArr; WriteFrameTransmit &rArr; process_0x81 &rArr; ReadFrameTransmit &rArr; ReadFrameChecksumBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTemper
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handshake
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_uint64_program
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cx
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compareArrays
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_mean_filter
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updating
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Brightness
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFrameWriteData
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCmdIdStrInit
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX96752_REG_Config
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialization
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Config
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[b8]"></a>nvic_irq_disable</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gd32a50x_misc.o(.text.nvic_irq_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nvic_irq_disable &rArr; __NVIC_DisableIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer6_Generate_1s_Interrupt
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer5_Generate_2s_Interrupt
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cx
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updating
</UL>

<P><STRONG><a name="[7a]"></a>nvic_irq_enable</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, gd32a50x_misc.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nvic_irq_enable &rArr; nvic_priority_group_set
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Generate_1ms_Interrupt
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_0x81
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Config
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER6_IRQHandler
</UL>

<P><STRONG><a name="[f7]"></a>nvic_priority_group_set</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, gd32a50x_misc.o(.text.nvic_priority_group_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[aa]"></a>nvic_vector_table_set</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gd32a50x_misc.o(.text.nvic_vector_table_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nvic_vector_table_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>process_0x81</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, control.o(.text.process_0x81))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = process_0x81 &rArr; ReadFrameTransmit &rArr; ReadFrameChecksumBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFrameTransmit
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFrameTransmit
</UL>

<P><STRONG><a name="[91]"></a>rcu_adc_clock_config</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gd32a50x_rcu.o(.text.rcu_adc_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rcu_adc_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuRcuInitialization
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuRcuDeinit
</UL>

<P><STRONG><a name="[c1]"></a>rcu_deinit</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, gd32a50x_rcu.o(.text.rcu_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = rcu_deinit &rArr; rcu_osci_stab_wait &rArr; rcu_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_stab_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updating
</UL>

<P><STRONG><a name="[f9]"></a>rcu_flag_get</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, gd32a50x_rcu.o(.text.rcu_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_stab_wait
</UL>

<P><STRONG><a name="[f8]"></a>rcu_osci_stab_wait</STRONG> (Thumb, 476 bytes, Stack size 48 bytes, gd32a50x_rcu.o(.text.rcu_osci_stab_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rcu_osci_stab_wait &rArr; rcu_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_deinit
</UL>

<P><STRONG><a name="[90]"></a>rcu_periph_clock_disable</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, gd32a50x_rcu.o(.text.rcu_periph_clock_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_clock_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Process
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuRcuDeinit
</UL>

<P><STRONG><a name="[92]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, gd32a50x_rcu.o(.text.rcu_periph_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Generate_1ms_Interrupt
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer19_Generate_PWM_config
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuRcuInitialization
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Process
</UL>

<P><STRONG><a name="[e2]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, gd32a50x_rcu.o(.text.rcu_periph_reset_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_deinit
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_deinit
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_deinit
</UL>

<P><STRONG><a name="[e1]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, gd32a50x_rcu.o(.text.rcu_periph_reset_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_deinit
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_deinit
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_deinit
</UL>

<P><STRONG><a name="[f5]"></a>readTemper</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ntc.o(.text.readTemper))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = readTemper &rArr; temper_calc
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temper_calc
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_data
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>spi_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32a50x_spi.o(.text.spi_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = spi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Master_Init
</UL>

<P><STRONG><a name="[a1]"></a>spi_i2s_deinit</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gd32a50x_spi.o(.text.spi_i2s_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = spi_i2s_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Master_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updating
</UL>

<P><STRONG><a name="[a3]"></a>spi_init</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, gd32a50x_spi.o(.text.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Master_Init
</UL>

<P><STRONG><a name="[a4]"></a>spi_nss_output_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32a50x_spi.o(.text.spi_nss_output_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = spi_nss_output_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Master_Init
</UL>

<P><STRONG><a name="[a2]"></a>spi_struct_para_init</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, gd32a50x_spi.o(.text.spi_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = spi_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Master_Init
</UL>

<P><STRONG><a name="[8b]"></a>systick_config</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, systick.o(.text.systick_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = systick_config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuInitialization
</UL>

<P><STRONG><a name="[b4]"></a>timer_auto_reload_shadow_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32a50x_timer.o(.text.timer_auto_reload_shadow_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer19_Generate_PWM_config
</UL>

<P><STRONG><a name="[b1]"></a>timer_channel_output_config</STRONG> (Thumb, 944 bytes, Stack size 16 bytes, gd32a50x_timer.o(.text.timer_channel_output_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_channel_output_config
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer19_Generate_PWM_config
</UL>

<P><STRONG><a name="[b2]"></a>timer_channel_output_mode_config</STRONG> (Thumb, 258 bytes, Stack size 12 bytes, gd32a50x_timer.o(.text.timer_channel_output_mode_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = timer_channel_output_mode_config
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer19_Generate_PWM_config
</UL>

<P><STRONG><a name="[98]"></a>timer_channel_output_pulse_value_config</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, gd32a50x_timer.o(.text.timer_channel_output_pulse_value_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_channel_output_pulse_value_config
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modify_PWM_Directly
</UL>

<P><STRONG><a name="[b3]"></a>timer_channel_output_shadow_config</STRONG> (Thumb, 258 bytes, Stack size 12 bytes, gd32a50x_timer.o(.text.timer_channel_output_shadow_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = timer_channel_output_shadow_config
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer19_Generate_PWM_config
</UL>

<P><STRONG><a name="[b0]"></a>timer_channel_output_struct_para_init</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, gd32a50x_timer.o(.text.timer_channel_output_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_channel_output_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer19_Generate_PWM_config
</UL>

<P><STRONG><a name="[ad]"></a>timer_deinit</STRONG> (Thumb, 246 bytes, Stack size 48 bytes, gd32a50x_timer.o(.text.timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer6_Generate_1s_Interrupt
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer5_Generate_2s_Interrupt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Generate_1ms_Interrupt
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer19_Generate_PWM_config
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updating
</UL>

<P><STRONG><a name="[b6]"></a>timer_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32a50x_timer.o(.text.timer_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer6_Generate_1s_Interrupt
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer5_Generate_2s_Interrupt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Generate_1ms_Interrupt
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer19_Generate_PWM_config
</UL>

<P><STRONG><a name="[af]"></a>timer_init</STRONG> (Thumb, 288 bytes, Stack size 8 bytes, gd32a50x_timer.o(.text.timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer6_Generate_1s_Interrupt
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer5_Generate_2s_Interrupt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Generate_1ms_Interrupt
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer19_Generate_PWM_config
</UL>

<P><STRONG><a name="[b7]"></a>timer_interrupt_enable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32a50x_timer.o(.text.timer_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer6_Generate_1s_Interrupt
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer5_Generate_2s_Interrupt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Generate_1ms_Interrupt
</UL>

<P><STRONG><a name="[ac]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32a50x_timer.o(.text.timer_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER6_IRQHandler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER5_DAC_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[ab]"></a>timer_interrupt_flag_get</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gd32a50x_timer.o(.text.timer_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER6_IRQHandler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER5_DAC_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[b5]"></a>timer_primary_output_config</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gd32a50x_timer.o(.text.timer_primary_output_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_primary_output_config
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer19_Generate_PWM_config
</UL>

<P><STRONG><a name="[ae]"></a>timer_struct_para_init</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, gd32a50x_timer.o(.text.timer_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer6_Generate_1s_Interrupt
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer5_Generate_2s_Interrupt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Generate_1ms_Interrupt
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer19_Generate_PWM_config
</UL>

<P><STRONG><a name="[fd]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[114]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[115]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[116]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[80]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c1_MasterWriteMulBytes
</UL>

<P><STRONG><a name="[117]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[118]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[119]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[4f]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a6]"></a>SysTick_Config</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, systick.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
</UL>

<P><STRONG><a name="[a7]"></a>__NVIC_SetPriority</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, systick.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[fa]"></a>search_data</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, ntc.o(.text.search_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = search_data
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTemper
</UL>

<P><STRONG><a name="[fb]"></a>temper_calc</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, ntc.o(.text.temper_calc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = temper_calc
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTemper
</UL>

<P><STRONG><a name="[5f]"></a>Afio_Config</STRONG> (Thumb, 250 bytes, Stack size 56 bytes, gpio_app.o(.text.Afio_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Afio_Config &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuGpioInitialization
</UL>

<P><STRONG><a name="[68]"></a>Gpio_Config</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, gpio_app.o(.text.Gpio_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Gpio_Config &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuGpioInitialization
</UL>

<P><STRONG><a name="[fc]"></a>system_clock_100m_pll_irc8m</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, system_gd32a50x.o(.text.system_clock_100m_pll_irc8m))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = system_clock_100m_pll_irc8m
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[a9]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32a50x.o(.text.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = system_clock_config &rArr; system_clock_100m_pll_irc8m
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_100m_pll_irc8m
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[e6]"></a>fmc_bank0_ready_wait</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gd32a50x_fmc.o(.text.fmc_bank0_ready_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = fmc_bank0_ready_wait &rArr; fmc_bank0_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank0_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_doubleword_program
</UL>

<P><STRONG><a name="[e7]"></a>fmc_bank0_state_get</STRONG> (Thumb, 210 bytes, Stack size 4 bytes, gd32a50x_fmc.o(.text.fmc_bank0_state_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fmc_bank0_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank0_ready_wait
</UL>

<P><STRONG><a name="[e8]"></a>fmc_bank1_ready_wait</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gd32a50x_fmc.o(.text.fmc_bank1_ready_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = fmc_bank1_ready_wait &rArr; fmc_bank1_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank1_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_doubleword_program
</UL>

<P><STRONG><a name="[e9]"></a>fmc_bank1_state_get</STRONG> (Thumb, 210 bytes, Stack size 4 bytes, gd32a50x_fmc.o(.text.fmc_bank1_state_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fmc_bank1_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank1_ready_wait
</UL>

<P><STRONG><a name="[f6]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, gd32a50x_misc.o(.text.__NVIC_DisableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_disable
</UL>

<P><STRONG><a name="[ff]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[fe]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[102]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[101]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
